import streamlit as st
import pandas as pd
import joblib
import numpy as np

# Chargement du mod√®le et des encodeurs
model = joblib.load("modele_prediction_maladie.pkl")
scaler = joblib.load("scaler.pkl")
ohe = joblib.load("onehot_encoder.pkl")
mlb = joblib.load("symptom_encoder.pkl")

# Titre
st.title("ü©∫ Pr√©diction de Maladie √† partir des Sympt√¥mes")

# Entr√©e utilisateur
age = st.slider("√Çge", 1, 100, 30)
sexe = st.selectbox("Sexe", ["Homme", "Femme"])
fumeur = st.selectbox("Fumeur ?", ["Oui", "Non"])
tension = st.slider("Tension art√©rielle (cmHg)", 8.0, 20.0, 12.0)
temperature = st.slider("Temp√©rature corporelle (¬∞C)", 35.0, 42.0, 37.0)

# Sympt√¥mes observ√©s
all_symptoms = mlb.classes_
symptomes = st.multiselect("Sympt√¥mes observ√©s", all_symptoms)

# Bouton de pr√©diction
if st.button("üîç Pr√©dire la maladie"):
    if len(symptomes) < 3:
        st.warning("‚ö†Ô∏è Veuillez s√©lectionner **au moins trois sympt√¥mes** pour lancer la pr√©diction.")
    else:
        # Pr√©paration des donn√©es
        input_num = scaler.transform([[age, tension, temperature]])
        input_cat = ohe.transform([[sexe, fumeur]])
        input_symptoms = mlb.transform([symptomes])
        input_final = np.concatenate([input_num, input_cat, input_symptoms], axis=1)

        # Pr√©diction + Probabilit√©s
        probas = model.predict_proba(input_final)[0]
        classes = model.classes_

        prediction_index = np.argmax(probas)
        prediction = classes[prediction_index]
        prediction_proba = probas[prediction_index]

        # R√©sultat
        st.success(f"‚úÖ Maladie pr√©dite : **{prediction}**")
        st.info(f"üìà Probabilit√© de cette pr√©diction : **{prediction_proba*100:.2f}%**")

